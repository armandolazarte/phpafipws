<?php

declare(strict_types=1);

use PhpAfipWs\Afip;
use PhpAfipWs\Exception\AfipException;

require_once __DIR__.'/../vendor/autoload.php';

/**
 * Ejemplo: Gesti√≥n de CAEA (C√≥digo de Autorizaci√≥n Electr√≥nico Anticipado)
 *
 * Este ejemplo muestra c√≥mo solicitar y consultar CAEA para facturaci√≥n
 * de gran volumen de comprobantes de forma diferida.
 */
try {
    $afip = new Afip([
        'cuit' => 20294192345, // Reemplaza con tu CUIT
        'modo_produccion' => false,
        'nombre_certificado' => 'certificado.crt',
        'nombre_clave' => 'clave_privada.key',
        'contrasena_clave' => 'tu_passphrase', // opcional
        'carpeta_recursos' => __DIR__.'/resources/',
        'carpeta_ta' => __DIR__.'/ta/',
    ]);

    echo "=== GESTI√ìN DE CAEA (C√≥digo de Autorizaci√≥n Electr√≥nico Anticipado) ===\n\n";
    echo 'Versi√≥n del SDK: '.$afip->obtenerVersionSdk()."\n";
    echo 'CUIT: '.$afip->obtenerCuit()."\n";
    echo 'Modo: '.($afip->esModoProduccion() ? 'Producci√≥n' : 'Homologaci√≥n')."\n\n";

    $facturacionElectronica = $afip->FacturacionElectronica;

    echo "=== ¬øQU√â ES UN CAEA? ===\n\n";
    echo "üìã DEFINICI√ìN:\n";
    echo "‚Ä¢ CAEA = C√≥digo de Autorizaci√≥n Electr√≥nico Anticipado\n";
    echo "‚Ä¢ Permite autorizar comprobantes de forma diferida\n";
    echo "‚Ä¢ √ötil para grandes vol√∫menes de facturaci√≥n\n";
    echo "‚Ä¢ Se solicita por per√≠odos quincenales\n";
    echo "‚Ä¢ Cada per√≠odo tiene 2 √≥rdenes (1ra y 2da quincena)\n\n";

    echo "=== SOLICITAR NUEVO CAEA ===\n\n";

    // Calcular per√≠odo actual (formato AAAAMM)
    $periodoActual = (int) date('Ym');
    $orden = 1; // 1 = Primera quincena, 2 = Segunda quincena

    echo "Solicitando CAEA para:\n";
    echo "‚Ä¢ Per√≠odo: {$periodoActual} (".date('Y-m').")\n";
    echo "‚Ä¢ Orden: {$orden} (Primera quincena)\n\n";

    // SIMULACI√ìN: En un entorno real, descomenta las siguientes l√≠neas
    /*
    echo "Enviando solicitud a AFIP...\n";
    $respuestaCAEA = $facturacionElectronica->crearCAEA($periodoActual, $orden);

    echo "‚úÖ CAEA solicitado exitosamente\n\n";

    if (isset($respuestaCAEA->FECAEASolicitarResult->ResultGet)) {
        $caea = $respuestaCAEA->FECAEASolicitarResult->ResultGet;

        echo "INFORMACI√ìN DEL CAEA:\n";
        echo "‚Ä¢ CAEA: {$caea->CAEA}\n";
        echo "‚Ä¢ Per√≠odo: {$caea->Periodo}\n";
        echo "‚Ä¢ Orden: {$caea->Orden}\n";
        echo "‚Ä¢ Vigente desde: {$caea->FchVigDesde}\n";
        echo "‚Ä¢ Vigente hasta: {$caea->FchVigHasta}\n";

        $numeroCAEA = $caea->CAEA;
    } else {
        echo "‚ùå Error al solicitar CAEA\n";
        print_r($respuestaCAEA);
        $numeroCAEA = null;
    }
    */

    // Para la demostraci√≥n, usamos un CAEA simulado
    $numeroCAEA = 21234567890123;
    echo "üîÑ SIMULACI√ìN: Usando CAEA de ejemplo: {$numeroCAEA}\n\n";

    echo "=== CONSULTAR CAEA EXISTENTE ===\n\n";

    echo "Consultando informaci√≥n del CAEA {$numeroCAEA}...\n\n";

    // SIMULACI√ìN: En un entorno real, descomenta las siguientes l√≠neas
    /*
    $consultaCAEA = $facturacionElectronica->obtenerCAEA($numeroCAEA);

    if (isset($consultaCAEA->FECAEAConsultarResult->ResultGet)) {
        $infoCAEA = $consultaCAEA->FECAEAConsultarResult->ResultGet;

        echo "‚úÖ CAEA encontrado:\n\n";
        echo "INFORMACI√ìN DETALLADA:\n";
        echo "‚Ä¢ CAEA: {$infoCAEA->CAEA}\n";
        echo "‚Ä¢ Per√≠odo: {$infoCAEA->Periodo}\n";
        echo "‚Ä¢ Orden: {$infoCAEA->Orden}\n";
        echo "‚Ä¢ Vigente desde: {$infoCAEA->FchVigDesde}\n";
        echo "‚Ä¢ Vigente hasta: {$infoCAEA->FchVigHasta}\n";
        echo "‚Ä¢ Fecha tope informar: {$infoCAEA->FchTopeInf}\n";
        echo "‚Ä¢ Fecha proceso: {$infoCAEA->FchProceso}\n";

        // Verificar estado
        $hoy = date('Ymd');
        $vigente = ($hoy >= $infoCAEA->FchVigDesde && $hoy <= $infoCAEA->FchVigHasta);
        echo "‚Ä¢ Estado: " . ($vigente ? "‚úÖ VIGENTE" : "‚ùå NO VIGENTE") . "\n";

    } else {
        echo "‚ùå CAEA no encontrado o error en la consulta\n";
        print_r($consultaCAEA);
    }
    */

    // Para la demostraci√≥n, simulamos la respuesta
    echo "üîÑ SIMULACI√ìN: Informaci√≥n del CAEA:\n\n";
    echo "INFORMACI√ìN DETALLADA:\n";
    echo "‚Ä¢ CAEA: {$numeroCAEA}\n";
    echo "‚Ä¢ Per√≠odo: {$periodoActual}\n";
    echo "‚Ä¢ Orden: {$orden}\n";
    $primerDia = strtotime('first day of this month');
    $dia15 = strtotime(date('Y-m-15'));
    $dia16 = strtotime(date('Y-m-16'));

    echo '‚Ä¢ Vigente desde: '.($primerDia ? date('Ymd', $primerDia) : date('Ym01'))."\n";
    echo '‚Ä¢ Vigente hasta: '.($dia15 ? date('Ymd', $dia15) : date('Ym15'))."\n";
    echo '‚Ä¢ Fecha tope informar: '.($dia16 ? date('Ymd', $dia16) : date('Ym16'))."\n";
    echo "‚Ä¢ Estado: ‚úÖ VIGENTE (simulado)\n\n";

    echo "=== USO DEL CAEA EN FACTURACI√ìN ===\n\n";

    echo "üìù PROCESO CON CAEA:\n";
    echo "1. Solicitar CAEA para el per√≠odo\n";
    echo "2. Emitir comprobantes usando el CAEA\n";
    echo "3. Informar los comprobantes a AFIP dentro del plazo\n";
    echo "4. AFIP valida y asigna CAE definitivos\n\n";

    echo "<?php\n";
    echo "// Ejemplo de uso del CAEA en un comprobante\n";
    echo "\$datosComprobante = [\n";
    echo "    'PtoVta' => 1,\n";
    echo "    'CbteTipo' => 11,\n";
    echo "    'Concepto' => 1,\n";
    echo "    // ... otros campos normales\n";
    echo "    \n";
    echo "    // Campos espec√≠ficos para CAEA\n";
    echo "    'CAEA' => '{$numeroCAEA}',\n";
    echo "    'CbteFch' => (int) date('Ymd'),\n";
    echo "];\n\n";

    echo "// Autorizar usando CAEA (m√©todo diferente al CAE normal)\n";
    echo "// \$respuesta = \$facturacionElectronica->autorizarComprobanteCAEA(\$datosComprobante);\n\n";

    echo "=== VENTAJAS Y DESVENTAJAS ===\n\n";

    echo "‚úÖ VENTAJAS DEL CAEA:\n";
    echo "‚Ä¢ Permite facturaci√≥n offline\n";
    echo "‚Ä¢ Ideal para grandes vol√∫menes\n";
    echo "‚Ä¢ Reduce la dependencia de conectividad\n";
    echo "‚Ä¢ Agiliza el proceso de facturaci√≥n masiva\n\n";

    echo "‚ùå DESVENTAJAS DEL CAEA:\n";
    echo "‚Ä¢ Proceso m√°s complejo\n";
    echo "‚Ä¢ Requiere informar comprobantes posteriormente\n";
    echo "‚Ä¢ Plazos estrictos para informar\n";
    echo "‚Ä¢ Mayor responsabilidad en el control\n\n";

    echo "=== PER√çODOS Y √ìRDENES ===\n\n";

    echo "üìÖ ESTRUCTURA DE PER√çODOS:\n";
    echo "‚Ä¢ Formato: AAAAMM (ejemplo: 202402 = Febrero 2024)\n";
    echo "‚Ä¢ Orden 1: Primera quincena (d√≠as 1-15)\n";
    echo "‚Ä¢ Orden 2: Segunda quincena (d√≠as 16-fin de mes)\n\n";

    echo "EJEMPLOS DE PER√çODOS:\n";
    $ejemplosPeriodos = [
        ['periodo' => 202401, 'orden' => 1, 'descripcion' => 'Enero 2024 - Primera quincena'],
        ['periodo' => 202401, 'orden' => 2, 'descripcion' => 'Enero 2024 - Segunda quincena'],
        ['periodo' => 202402, 'orden' => 1, 'descripcion' => 'Febrero 2024 - Primera quincena'],
        ['periodo' => 202402, 'orden' => 2, 'descripcion' => 'Febrero 2024 - Segunda quincena'],
    ];

    foreach ($ejemplosPeriodos as $ejemplo) {
        echo sprintf("‚Ä¢ Per√≠odo %d, Orden %d: %s\n",
            $ejemplo['periodo'],
            $ejemplo['orden'],
            $ejemplo['descripcion']
        );
    }

    echo "\n=== FUNCI√ìN HELPER PARA PER√çODOS ===\n\n";

    echo "<?php\n";
    echo "function calcularPeriodoCAEA(\$fecha = null) {\n";
    echo "    \$fecha = \$fecha ?: date('Y-m-d');\n";
    echo "    \$timestamp = strtotime(\$fecha);\n";
    echo "    \n";
    echo "    \$periodo = (int) date('Ym', \$timestamp);\n";
    echo "    \$dia = (int) date('d', \$timestamp);\n";
    echo "    \$orden = (\$dia <= 15) ? 1 : 2;\n";
    echo "    \n";
    echo "    return ['periodo' => \$periodo, 'orden' => \$orden];\n";
    echo "}\n\n";

    echo "// Uso:\n";
    echo "\$info = calcularPeriodoCAEA(); // Per√≠odo actual\n";
    echo "// \$info = ['periodo' => {$periodoActual}, 'orden' => {$orden}]\n\n";

    echo "=== CONSEJOS DE USO ===\n\n";
    echo "üí° CONSEJOS:\n";
    echo "‚Ä¢ Solicita CAEA solo si manejas grandes vol√∫menes\n";
    echo "‚Ä¢ Para pocos comprobantes, usa CAE normal\n";
    echo "‚Ä¢ Planifica con anticipaci√≥n los per√≠odos\n";
    echo "‚Ä¢ Mant√©n control estricto de los comprobantes emitidos\n";
    echo "‚Ä¢ Respeta los plazos para informar a AFIP\n";
    echo "‚Ä¢ Implementa validaciones de fechas de vigencia\n";
    echo "‚Ä¢ Considera tener un sistema de respaldo\n\n";

    echo "‚ö†Ô∏è  IMPORTANTE:\n";
    echo "‚Ä¢ El CAEA tiene fechas de vigencia estrictas\n";
    echo "‚Ä¢ Debes informar los comprobantes dentro del plazo\n";
    echo "‚Ä¢ No informar a tiempo puede generar multas\n";
    echo "‚Ä¢ Consulta con tu contador antes de implementar\n\n";

    echo "=== PR√ìXIMOS PASOS ===\n\n";
    echo "Para implementar CAEA en tu sistema:\n";
    echo "1. Eval√∫a si realmente necesitas CAEA\n";
    echo "2. Implementa la l√≥gica de per√≠odos y √≥rdenes\n";
    echo "3. Crea un sistema de control de comprobantes\n";
    echo "4. Implementa la informacion posterior a AFIP\n";
    echo "5. Prueba exhaustivamente en homologaci√≥n\n\n";

} catch (AfipException $e) {
    echo sprintf('‚ùå Error de AFIP: %s%s', $e->getMessage(), PHP_EOL);
    echo sprintf('   C√≥digo: %d%s', $e->getCode(), PHP_EOL);
    echo sprintf('   Tipo: %s%s', $e->obtenerTipoError(), PHP_EOL);
} catch (Exception $e) {
    echo sprintf('‚ùå Error general: %s%s', $e->getMessage(), PHP_EOL);
}
